package com.cloud.adapi;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.1
 * 2015-06-18T17:56:47.392+08:00
 * Generated source version: 3.1.1
 * 
 */
@WebService(targetNamespace = "urn:sangfor:ad:api:soap:v1:base", name = "adapiPortType")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface AdapiPortType {

    /**
     * 删除节点监视器
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteNodeMonitor(
        @WebParam(partName = "monitor_name", name = "monitor_name")
        byte[] monitorName,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 删除会话保持
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deletePersist(
        @WebParam(partName = "persist_name", name = "persist_name")
        byte[] persistName,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 更新节点池
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType updateNodePoolInfo(
        @WebParam(partName = "node_pool_name", name = "node_pool_name")
        byte[] nodePoolName,
        @WebParam(partName = "node_pool_info", name = "node_pool_info")
        NodePoolViewInfoType nodePoolInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 创建虚拟服务
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType createVs(
        @WebParam(partName = "vs_info", name = "vs_info")
        VsCreateInfoType vsInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 删除节点池
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteNodePoolInfo(
        @WebParam(partName = "node_name", name = "node_name")
        byte[] nodeName,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取节点监视器详情
     */
    @WebResult(name = "monitor_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "monitor_info")
    @WebMethod
    public NodeMonitorInfoType getNodeMonitorInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "monitor_name", name = "monitor_name")
        byte[] monitorName
    ) throws ErrorOpr;

    /**
     * 更新会话保持
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType updatePersist(
        @WebParam(partName = "persist_name", name = "persist_name")
        byte[] persistName,
        @WebParam(partName = "persist_info", name = "persist_info")
        PersistUpdateInfoType persistInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 删除虚拟服务的前置调度策略
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteSched(
        @WebParam(partName = "vs_name", name = "vs_name")
        byte[] vsName,
        @WebParam(partName = "sched_info", name = "sched_info")
        byte[] schedInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 删除节点
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteNode(
        @WebParam(partName = "node_key", name = "node_key")
        NodeKeyExtType nodeKey,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 删除IP组
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteIpGroup(
        @WebParam(partName = "ip_group_name", name = "ip_group_name")
        byte[] ipGroupName,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取SNAT地址集列表
     */
    @WebResult(name = "snat_list", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "snat_list")
    @WebMethod
    public SnatInfoListType getSnatInfoList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取会话保持列表
     */
    @WebResult(name = "persist_list", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "persist_list")
    @WebMethod
    public PersistInfoListType getPersistInfoList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 创建服务
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType createServ(
        @WebParam(partName = "server_info", name = "server_info")
        ServiceInfoType serverInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取IP组列表
     */
    @WebResult(name = "ip_group_list", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "ip_group_list")
    @WebMethod
    public IpGroupInfoListType getIpGroupListInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 更新虚拟服务
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType updateVs(
        @WebParam(partName = "vs_name", name = "vs_name")
        byte[] vsName,
        @WebParam(partName = "vs_info", name = "vs_info")
        VsUpdateInfoType vsInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 增加指定服务的端口列表
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType addServPortInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "server_name", name = "server_name")
        byte[] serverName,
        @WebParam(partName = "port_info", name = "port_info")
        PortScopeType portInfo
    ) throws ErrorOpr;

    /**
     * 获取节点池列表
     */
    @WebResult(name = "node_pool_list", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "node_pool_list")
    @WebMethod
    public NodePoolListType getNodePoolList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取虚拟服务的状态列表
     */
    @WebResult(name = "vs_stat", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "vs_stat")
    @WebMethod
    public VsStatusListType getVsStatus(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 更新节点监视器
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType updateNodeMonitor(
        @WebParam(partName = "monitor_name", name = "monitor_name")
        byte[] monitorName,
        @WebParam(partName = "monitor_info", name = "monitor_info")
        NodeMonitorUpdateInfoType monitorInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 创建节点监视器
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType createNodeMonitor(
        @WebParam(partName = "monitor_info", name = "monitor_info")
        NodeMonitorInfoType monitorInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取虚拟服务列表
     */
    @WebResult(name = "vs_info_list", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "vs_info_list")
    @WebMethod
    public VsBaseInfoListType getVsBaseInfoList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取节点监视器列表
     */
    @WebResult(name = "monitor_list", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "monitor_list")
    @WebMethod
    public NodeMonitorInfoListType getNodeMonitorInfoList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 创建会话保持
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType createPersist(
        @WebParam(partName = "persist_info", name = "persist_info")
        PersistInfoType persistInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取ssl策略列表
     */
    @WebResult(name = "profilelist", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "profilelist")
    @WebMethod
    public SslProfileListType getSslProfileList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取指定节点池中节点的状态列表
     */
    @WebResult(name = "node_pool", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "node_pool")
    @WebMethod
    public NodeStatusListType getNodeStatus(
        @WebParam(partName = "node_pool_name", name = "node_pool_name")
        byte[] nodePoolName,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取指定节点池中的节点列表
     */
    @WebResult(name = "node_pool", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "node_pool")
    @WebMethod
    public NodeListType getNodeList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "node_pool_name", name = "node_pool_name")
        byte[] nodePoolName
    ) throws ErrorOpr;

    /**
     * 创建IP组
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType createIpGroup(
        @WebParam(partName = "ip_group_info", name = "ip_group_info")
        IpGroupInfoType ipGroupInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取WAN口信息列表
     */
    @WebResult(name = "wan_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "wan_info")
    @WebMethod
    public WanInfoListType getWanNameInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取前置调度策略列表
     */
    @WebResult(name = "schedlist", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "schedlist")
    @WebMethod
    public VsSchedListType getVsSchedList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 更新节点
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType updateNode(
        @WebParam(partName = "node_key", name = "node_key")
        NodeKeyType nodeKey,
        @WebParam(partName = "node_info", name = "node_info")
        NodeInfoExType nodeInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取指定服务的端口列表
     */
    @WebResult(name = "serv_port_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "serv_port_info")
    @WebMethod
    public PortListType getServPortInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "server_name", name = "server_name")
        byte[] serverName
    ) throws ErrorOpr;

    /**
     * 创建节点池
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType createNodePoolInfo(
        @WebParam(partName = "node_pool_info", name = "node_pool_info")
        NodePoolCreateInfoType nodePoolInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取WAN口IP列表信息
     */
    @WebResult(name = "ip_list", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "ip_list")
    @WebMethod
    public WanIpListType getWanIpInfoList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "name", name = "name")
        byte[] name
    ) throws ErrorOpr;

    /**
     * 删除服务
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteServ(
        @WebParam(partName = "server_name", name = "server_name")
        byte[] serverName,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 删除指定服务的端口列表
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteServPortInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "server_name", name = "server_name")
        byte[] serverName,
        @WebParam(partName = "port_info", name = "port_info")
        PortScopeType portInfo
    ) throws ErrorOpr;

    /**
     * 创建节点
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType createNode(
        @WebParam(partName = "node_pool_name", name = "node_pool_name")
        byte[] nodePoolName,
        @WebParam(partName = "node_info", name = "node_info")
        NodeInfoType nodeInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取会话保持信息详情
     */
    @WebResult(name = "persist_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "persist_info")
    @WebMethod
    public PersistInfoType getPersistInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "persist_name", name = "persist_name")
        byte[] persistName
    ) throws ErrorOpr;

    /**
     * 获取服务列表
     */
    @WebResult(name = "serv_port_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "serv_port_info")
    @WebMethod
    public ServiceInfoListType getServInfoList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 更新服务
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType updateServ(
        @WebParam(partName = "server_name", name = "server_name")
        byte[] serverName,
        @WebParam(partName = "server_info", name = "server_info")
        ServerInfoExType serverInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取指定节点信息
     */
    @WebResult(name = "node_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "node_info")
    @WebMethod
    public NodeInfoType getNodeInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "node_key", name = "node_key")
        NodeKeyType nodeKey
    ) throws ErrorOpr;

    /**
     * 待删除的IP信息
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteIpInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "ip_group_name", name = "ip_group_name")
        byte[] ipGroupName,
        @WebParam(partName = "ip_info", name = "ip_info")
        IpInfoType ipInfo
    ) throws ErrorOpr;

    /**
     * 获取指定虚拟服务详情
     */
    @WebResult(name = "vs_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "vs_info")
    @WebMethod
    public VsViewInfoType getVsInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "vs_name", name = "vs_name")
        byte[] vsName
    ) throws ErrorOpr;

    /**
     * 更新IP组
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType updateIpGroup(
        @WebParam(partName = "ip_group_name", name = "ip_group_name")
        byte[] ipGroupName,
        @WebParam(partName = "ip_group_info", name = "ip_group_info")
        IpGroupBaseType ipGroupInfo,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 删除虚拟服务
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType deleteVs(
        @WebParam(partName = "vs_name", name = "vs_name")
        byte[] vsName,
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth
    ) throws ErrorOpr;

    /**
     * 获取节点池信息详情
     */
    @WebResult(name = "node_pool_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "node_pool_info")
    @WebMethod
    public NodePoolViewInfoType getNodePoolInfo(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "node_pool_name", name = "node_pool_name")
        byte[] nodePoolName
    ) throws ErrorOpr;

    /**
     * 获取指定IP组的IP列表
     */
    @WebResult(name = "ip_info", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "ip_info")
    @WebMethod
    public IpInfoListType getIpInfoList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "ip_group_name", name = "ip_group_name")
        byte[] ipGroupName
    ) throws ErrorOpr;

    /**
     * 待增加的IP信息
     */
    @WebResult(name = "error", targetNamespace = "urn:sangfor:ad:api:soap:v1:base", partName = "error")
    @WebMethod
    public ErrType addIpInfoList(
        @WebParam(partName = "ad_auth", name = "ad_auth")
        ADAuthType adAuth,
        @WebParam(partName = "ip_group_name", name = "ip_group_name")
        byte[] ipGroupName,
        @WebParam(partName = "ip_info", name = "ip_info")
        IpInfoType ipInfo
    ) throws ErrorOpr;
}

package com.cloud.adapi;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import com.thoughtworks.xstream.core.util.Base64Encoder;

/**
 * This class was generated by Apache CXF 3.1.1
 * 2015-06-18T17:56:47.438+08:00
 * Generated source version: 3.1.1
 * 
 */
@WebServiceClient(name = "adapi", wsdlLocation = "file:/home/adapi.wsdl",targetNamespace = "urn:sangfor:ad:api:soap:v1:base") 
public class Adapi extends Service {

	public static URL WSDL_LOCATION;
	
	public static Base64Encoder bEncoder;

	public final static QName SERVICE = new QName("urn:sangfor:ad:api:soap:v1:base", "adapi");
    
	public final static QName Adapi = new QName("urn:sangfor:ad:api:soap:v1:base", "adapi");
	
    /**
     * 获取到wsdl地址
     */
   /* static {
        URL url = null;
        try {
             url = new URL("file:/home/adapi.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Adapi.class.getName()).log(java.util.logging.Level.INFO,  "Can not initialize the default wsdl from {0}", "file:/home/adapi.wsdl");
        }
        WSDL_LOCATION = url;
    }*/
    
    public Adapi(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Adapi(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Adapi() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public Adapi(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Adapi(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Adapi(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns AdapiPortType
     */
    @WebEndpoint(name = "adapi")
    public AdapiPortType getAdapi() {
        return super.getPort(Adapi, AdapiPortType.class);
    }

    public static byte[] Base64Encoder(String str) {
	    if(bEncoder == null){
		   bEncoder = new Base64Encoder();
	    }
	    return bEncoder.decode(str);
   }
    
    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdapiPortType
     */
    @WebEndpoint(name = "adapi")
    public AdapiPortType getAdapi(WebServiceFeature... features) {
        return super.getPort(Adapi, AdapiPortType.class, features);
    }
	
}
